services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: iotuser
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: iotdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  # zookeeper:
  #   image: bitnami/zookeeper:latest
  #   environment:
  #     ALLOW_ANONYMOUS_LOGIN: 'yes'
  #   ports:
  #     - "2181:2181"

  kafka:
    image: bitnami/kafka:latest
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
      - "9093:9093"

  grpcservice:
    build:
      context: .
      dockerfile: IoT.GrpcService/Dockerfile
    depends_on:
      - kafka
    ports:
      - "6000:80"
    environment:
      - Kafka__BootstrapServers=kafka:9092

  kafkaconsumer:
    build:
      context: .
      dockerfile: IoT.KafkaConsumer/Dockerfile
    depends_on:
      - kafka
      - postgres
    environment:
      - Kafka__BootstrapServers=kafka:9092
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Username=iotuser;Password=secret;Database=iotdb

  backend:
    build:
      context: .
      dockerfile: IoT.Backend/Dockerfile
    depends_on:
      - kafka
    ports:
      - "5000:80"
    environment:
      - Kafka__BootstrapServers=kafka:9092

  blazor:
    build:
      context: .
      dockerfile: IoT.BlazorClient/Dockerfile
    depends_on:
      - backend
    ports:
      - "5002:80"

volumes:
  pgdata: